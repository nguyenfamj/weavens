name: Create release and deploy backend to production

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'backend/**'

permissions:
  contents: write
  pull-requests: write

jobs:
  build-and-release:
    name: Build and Create Release
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    outputs:
      release_tag: ${{ steps.create_tag.outputs.release_tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Git credentials
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"

      - name: Create release tag
        id: create_tag
        run: |
          echo "::set-output name=release_tag::v$(date +%Y.%m.%d).$(date +%s)"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push backend Docker image
        working-directory: backend
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: crux-backend
          IMAGE_TAG: ${{ steps.create_tag.outputs.release_tag }}
        run: |
          docker buildx build --no-cache --platform linux/amd64 -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Tag ref
        run: |
          git tag -a ${{ steps.create_tag.outputs.release_tag }} -m "Release ${{ steps.create_tag.outputs.release_tag }}" ${{ github.sha }}
          git push origin ${{ steps.create_tag.outputs.release_tag }}

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.create_tag.outputs.release_tag }}

  deploy-to-prod:
    name: Deploy to Production
    needs: build-and-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: '1.7.0'

      - name: Update Backend image version in SSM
        working-directory: infra/global/ssm_parameters
        env:
          TF_LOG: DEBUG
        run: |
          terraform init
          terraform apply -auto-approve \
            -var="PRODUCTION_BACKEND_IMAGE_TAG=${{ needs.build-and-release.outputs.release_tag }}" \
            -var="PRODUCTION_BACKEND_OPENAI_API_KEY=${{ secrets.PRODUCTION_BACKEND_OPENAI_API_KEY }}" \
            -var="PRODUCTION_BACKEND_FIRECRAWL_API_KEY=${{ secrets.PRODUCTION_BACKEND_FIRECRAWL_API_KEY }}"

      - name: Update ECS task definition
        working-directory: infra/environments/production
        run: |
          terraform init
          terraform apply -auto-approve -target=module.backend
